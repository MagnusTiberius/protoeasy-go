// Code generated by protoc-gen-go.
// source: country.proto
// DO NOT EDIT!

package pbtype

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Country struct {
	Name         string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Alpha_2Code  CountryAlpha2Code `protobuf:"varint,2,opt,name=alpha_2_code,enum=pb.type.CountryAlpha2Code" json:"alpha_2_code,omitempty"`
	Alpha_3Code  CountryAlpha3Code `protobuf:"varint,3,opt,name=alpha_3_code,enum=pb.type.CountryAlpha3Code" json:"alpha_3_code,omitempty"`
	NumericCode  uint32            `protobuf:"varint,4,opt,name=numeric_code" json:"numeric_code,omitempty"`
	CurrencyCode CurrencyCode      `protobuf:"varint,5,opt,name=currency_code,enum=pb.type.CurrencyCode" json:"currency_code,omitempty"`
}

func (m *Country) Reset()                    { *m = Country{} }
func (m *Country) String() string            { return proto.CompactTextString(m) }
func (*Country) ProtoMessage()               {}
func (*Country) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type Currency struct {
	Name        string       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Code        CurrencyCode `protobuf:"varint,2,opt,name=code,enum=pb.type.CurrencyCode" json:"code,omitempty"`
	NumericCode uint32       `protobuf:"varint,3,opt,name=numeric_code" json:"numeric_code,omitempty"`
	MinorUnit   uint32       `protobuf:"varint,4,opt,name=minor_unit" json:"minor_unit,omitempty"`
}

func (m *Currency) Reset()                    { *m = Currency{} }
func (m *Currency) String() string            { return proto.CompactTextString(m) }
func (*Currency) ProtoMessage()               {}
func (*Currency) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func init() {
	proto.RegisterType((*Country)(nil), "pb.type.Country")
	proto.RegisterType((*Currency)(nil), "pb.type.Currency")
}

var fileDescriptor1 = []byte{
	// 216 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xce, 0x2f, 0xcd,
	0x2b, 0x29, 0xaa, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2f, 0x48, 0xd2, 0x2b, 0xa9,
	0x2c, 0x48, 0x95, 0x12, 0x84, 0x89, 0xa7, 0xa7, 0xe6, 0x41, 0xe4, 0x94, 0xf6, 0x33, 0x72, 0xb1,
	0x3b, 0x43, 0x44, 0x85, 0x78, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35,
	0x38, 0x85, 0x0c, 0xb8, 0x78, 0x12, 0x73, 0x0a, 0x32, 0x12, 0xe3, 0x8d, 0xe2, 0x93, 0xf3, 0x53,
	0x52, 0x25, 0x98, 0x80, 0xa2, 0x7c, 0x46, 0x52, 0x7a, 0x50, 0xc3, 0xf4, 0xa0, 0xba, 0x1c, 0x41,
	0x6a, 0x8c, 0x9c, 0x81, 0x2a, 0x10, 0x3a, 0x8c, 0x21, 0x3a, 0x98, 0xf1, 0xe8, 0x30, 0x06, 0xeb,
	0x10, 0xe1, 0xe2, 0xc9, 0x2b, 0xcd, 0x4d, 0x2d, 0xca, 0x4c, 0x86, 0xe8, 0x60, 0x01, 0xea, 0xe0,
	0x15, 0xd2, 0x01, 0x7a, 0xa0, 0xb4, 0xa8, 0x28, 0x35, 0x2f, 0xb9, 0x12, 0x22, 0xcc, 0x0a, 0x36,
	0x48, 0x14, 0x61, 0x10, 0x54, 0x16, 0x64, 0x86, 0x52, 0x3a, 0x17, 0x07, 0x8c, 0x8f, 0xe6, 0x03,
	0x65, 0x2e, 0x16, 0x24, 0x97, 0x63, 0xd7, 0x8e, 0xe1, 0x04, 0x66, 0xb0, 0x13, 0x84, 0xb8, 0xb8,
	0x72, 0x33, 0xf3, 0xf2, 0x8b, 0xe2, 0x4b, 0xf3, 0x32, 0x4b, 0x20, 0xce, 0x72, 0xe2, 0x88, 0x62,
	0x2b, 0x48, 0x02, 0x19, 0x90, 0xc4, 0x06, 0x0e, 0x3b, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x35, 0x8a, 0x85, 0x12, 0x68, 0x01, 0x00, 0x00,
}
