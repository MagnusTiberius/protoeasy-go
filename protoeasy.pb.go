// Code generated by protoc-gen-go.
// source: protoeasy.proto
// DO NOT EDIT!

package protoeasy

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "go.pedge.io/google-protobuf"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GoPluginType int32

const (
	GoPluginType_GO_PLUGIN_TYPE_NONE   GoPluginType = 0
	GoPluginType_GO_PLUGIN_TYPE_GO     GoPluginType = 1
	GoPluginType_GO_PLUGIN_TYPE_GOFAST GoPluginType = 2
)

var GoPluginType_name = map[int32]string{
	0: "GO_PLUGIN_TYPE_NONE",
	1: "GO_PLUGIN_TYPE_GO",
	2: "GO_PLUGIN_TYPE_GOFAST",
}
var GoPluginType_value = map[string]int32{
	"GO_PLUGIN_TYPE_NONE":   0,
	"GO_PLUGIN_TYPE_GO":     1,
	"GO_PLUGIN_TYPE_GOFAST": 2,
}

func (x GoPluginType) String() string {
	return proto.EnumName(GoPluginType_name, int32(x))
}
func (GoPluginType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GogoPluginType int32

const (
	GogoPluginType_GOGO_PLUGIN_TYPE_NONE       GogoPluginType = 0
	GogoPluginType_GOGO_PLUGIN_TYPE_GOGO       GogoPluginType = 1
	GogoPluginType_GOGO_PLUGIN_TYPE_GOGOFAST   GogoPluginType = 2
	GogoPluginType_GOGO_PLUGIN_TYPE_GOGOFASTER GogoPluginType = 3
	GogoPluginType_GOGO_PLUGIN_TYPE_GOGOSLICK  GogoPluginType = 4
)

var GogoPluginType_name = map[int32]string{
	0: "GOGO_PLUGIN_TYPE_NONE",
	1: "GOGO_PLUGIN_TYPE_GOGO",
	2: "GOGO_PLUGIN_TYPE_GOGOFAST",
	3: "GOGO_PLUGIN_TYPE_GOGOFASTER",
	4: "GOGO_PLUGIN_TYPE_GOGOSLICK",
}
var GogoPluginType_value = map[string]int32{
	"GOGO_PLUGIN_TYPE_NONE":       0,
	"GOGO_PLUGIN_TYPE_GOGO":       1,
	"GOGO_PLUGIN_TYPE_GOGOFAST":   2,
	"GOGO_PLUGIN_TYPE_GOGOFASTER": 3,
	"GOGO_PLUGIN_TYPE_GOGOSLICK":  4,
}

func (x GogoPluginType) String() string {
	return proto.EnumName(GogoPluginType_name, int32(x))
}
func (GogoPluginType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type CompileOptions struct {
	Grpc                   bool              `protobuf:"varint,1,opt,name=grpc" json:"grpc,omitempty"`
	GrpcGateway            bool              `protobuf:"varint,2,opt,name=grpc_gateway" json:"grpc_gateway,omitempty"`
	NoDefaultIncludes      bool              `protobuf:"varint,3,opt,name=no_default_includes" json:"no_default_includes,omitempty"`
	ExcludePattern         []string          `protobuf:"bytes,4,rep,name=exclude_pattern" json:"exclude_pattern,omitempty"`
	RelContext             string            `protobuf:"bytes,5,opt,name=rel_context" json:"rel_context,omitempty"`
	Cpp                    bool              `protobuf:"varint,20,opt,name=cpp" json:"cpp,omitempty"`
	CppRelOut              string            `protobuf:"bytes,21,opt,name=cpp_rel_out" json:"cpp_rel_out,omitempty"`
	Csharp                 bool              `protobuf:"varint,30,opt,name=csharp" json:"csharp,omitempty"`
	CsharpRelOut           string            `protobuf:"bytes,31,opt,name=csharp_rel_out" json:"csharp_rel_out,omitempty"`
	Go                     bool              `protobuf:"varint,40,opt,name=go" json:"go,omitempty"`
	GoPluginType           GoPluginType      `protobuf:"varint,41,opt,name=go_plugin_type,enum=protoeasy.GoPluginType" json:"go_plugin_type,omitempty"`
	GoRelOut               string            `protobuf:"bytes,42,opt,name=go_rel_out" json:"go_rel_out,omitempty"`
	GoImportPath           string            `protobuf:"bytes,43,opt,name=go_import_path" json:"go_import_path,omitempty"`
	GoNoDefaultModifiers   bool              `protobuf:"varint,44,opt,name=go_no_default_modifiers" json:"go_no_default_modifiers,omitempty"`
	GoModifiers            map[string]string `protobuf:"bytes,45,rep,name=go_modifiers" json:"go_modifiers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Gogo                   bool              `protobuf:"varint,50,opt,name=gogo" json:"gogo,omitempty"`
	GogoPluginType         GogoPluginType    `protobuf:"varint,51,opt,name=gogo_plugin_type,enum=protoeasy.GogoPluginType" json:"gogo_plugin_type,omitempty"`
	GogoRelOut             string            `protobuf:"bytes,52,opt,name=gogo_rel_out" json:"gogo_rel_out,omitempty"`
	GogoImportPath         string            `protobuf:"bytes,53,opt,name=gogo_import_path" json:"gogo_import_path,omitempty"`
	GogoNoDefaultModifiers bool              `protobuf:"varint,54,opt,name=gogo_no_default_modifiers" json:"gogo_no_default_modifiers,omitempty"`
	GogoModifiers          map[string]string `protobuf:"bytes,55,rep,name=gogo_modifiers" json:"gogo_modifiers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Objc                   bool              `protobuf:"varint,60,opt,name=objc" json:"objc,omitempty"`
	ObjcRelOut             string            `protobuf:"bytes,61,opt,name=objc_rel_out" json:"objc_rel_out,omitempty"`
	Python                 bool              `protobuf:"varint,70,opt,name=python" json:"python,omitempty"`
	PythonRelOut           string            `protobuf:"bytes,71,opt,name=python_rel_out" json:"python_rel_out,omitempty"`
	Ruby                   bool              `protobuf:"varint,80,opt,name=ruby" json:"ruby,omitempty"`
	RubyRelOut             string            `protobuf:"bytes,81,opt,name=ruby_rel_out" json:"ruby_rel_out,omitempty"`
}

func (m *CompileOptions) Reset()                    { *m = CompileOptions{} }
func (m *CompileOptions) String() string            { return proto.CompactTextString(m) }
func (*CompileOptions) ProtoMessage()               {}
func (*CompileOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CompileOptions) GetGoModifiers() map[string]string {
	if m != nil {
		return m.GoModifiers
	}
	return nil
}

func (m *CompileOptions) GetGogoModifiers() map[string]string {
	if m != nil {
		return m.GogoModifiers
	}
	return nil
}

type Command struct {
	Arg []string `protobuf:"bytes,1,rep,name=arg" json:"arg,omitempty"`
}

func (m *Command) Reset()                    { *m = Command{} }
func (m *Command) String() string            { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()               {}
func (*Command) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type CompileInfo struct {
	Command         []*Command                `protobuf:"bytes,1,rep,name=command" json:"command,omitempty"`
	InputSizeBytes  uint64                    `protobuf:"varint,2,opt,name=input_size_bytes" json:"input_size_bytes,omitempty"`
	OutputSizeBytes uint64                    `protobuf:"varint,3,opt,name=output_size_bytes" json:"output_size_bytes,omitempty"`
	Duration        *google_protobuf.Duration `protobuf:"bytes,4,opt,name=duration" json:"duration,omitempty"`
}

func (m *CompileInfo) Reset()                    { *m = CompileInfo{} }
func (m *CompileInfo) String() string            { return proto.CompactTextString(m) }
func (*CompileInfo) ProtoMessage()               {}
func (*CompileInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CompileInfo) GetCommand() []*Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *CompileInfo) GetDuration() *google_protobuf.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

type CompileRequest struct {
	Tar            []byte          `protobuf:"bytes,1,opt,name=tar,proto3" json:"tar,omitempty"`
	CompileOptions *CompileOptions `protobuf:"bytes,2,opt,name=compile_options" json:"compile_options,omitempty"`
}

func (m *CompileRequest) Reset()                    { *m = CompileRequest{} }
func (m *CompileRequest) String() string            { return proto.CompactTextString(m) }
func (*CompileRequest) ProtoMessage()               {}
func (*CompileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CompileRequest) GetCompileOptions() *CompileOptions {
	if m != nil {
		return m.CompileOptions
	}
	return nil
}

type CompileResponse struct {
	Tar         []byte       `protobuf:"bytes,1,opt,name=tar,proto3" json:"tar,omitempty"`
	CompileInfo *CompileInfo `protobuf:"bytes,2,opt,name=compile_info" json:"compile_info,omitempty"`
}

func (m *CompileResponse) Reset()                    { *m = CompileResponse{} }
func (m *CompileResponse) String() string            { return proto.CompactTextString(m) }
func (*CompileResponse) ProtoMessage()               {}
func (*CompileResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CompileResponse) GetCompileInfo() *CompileInfo {
	if m != nil {
		return m.CompileInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*CompileOptions)(nil), "protoeasy.CompileOptions")
	proto.RegisterType((*Command)(nil), "protoeasy.Command")
	proto.RegisterType((*CompileInfo)(nil), "protoeasy.CompileInfo")
	proto.RegisterType((*CompileRequest)(nil), "protoeasy.CompileRequest")
	proto.RegisterType((*CompileResponse)(nil), "protoeasy.CompileResponse")
	proto.RegisterEnum("protoeasy.GoPluginType", GoPluginType_name, GoPluginType_value)
	proto.RegisterEnum("protoeasy.GogoPluginType", GogoPluginType_name, GogoPluginType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for API service

type APIClient interface {
	Compile(ctx context.Context, in *CompileRequest, opts ...grpc.CallOption) (*CompileResponse, error)
}

type aPIClient struct {
	cc *grpc.ClientConn
}

func NewAPIClient(cc *grpc.ClientConn) APIClient {
	return &aPIClient{cc}
}

func (c *aPIClient) Compile(ctx context.Context, in *CompileRequest, opts ...grpc.CallOption) (*CompileResponse, error) {
	out := new(CompileResponse)
	err := grpc.Invoke(ctx, "/protoeasy.API/Compile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for API service

type APIServer interface {
	Compile(context.Context, *CompileRequest) (*CompileResponse, error)
}

func RegisterAPIServer(s *grpc.Server, srv APIServer) {
	s.RegisterService(&_API_serviceDesc, srv)
}

func _API_Compile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(CompileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(APIServer).Compile(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protoeasy.API",
	HandlerType: (*APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Compile",
			Handler:    _API_Compile_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 748 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x54, 0xed, 0x52, 0xdb, 0x46,
	0x14, 0xc5, 0x1f, 0x7c, 0xf8, 0xda, 0xb5, 0xcd, 0x02, 0xf6, 0xda, 0x4c, 0x81, 0xba, 0x7f, 0xa8,
	0xa1, 0x66, 0xc6, 0xd0, 0x8f, 0xe9, 0xb4, 0x33, 0xa5, 0x60, 0x3c, 0x9e, 0x12, 0x6c, 0x3e, 0xf2,
	0x83, 0x5f, 0x1a, 0x59, 0x5e, 0x0b, 0x25, 0xb6, 0x56, 0x91, 0x56, 0x09, 0xca, 0x73, 0xe4, 0x19,
	0xf2, 0x32, 0x79, 0xa9, 0xec, 0x5e, 0x59, 0x8e, 0x05, 0x4a, 0xf2, 0x4f, 0x7b, 0xcf, 0xd9, 0xb3,
	0x7b, 0xce, 0xbd, 0x2b, 0x28, 0x39, 0x2e, 0x17, 0x9c, 0xe9, 0x5e, 0xd0, 0xc2, 0x2f, 0x92, 0x9b,
	0x17, 0xea, 0x3b, 0x26, 0xe7, 0xe6, 0x84, 0x1d, 0x61, 0x65, 0xe8, 0x8f, 0x8f, 0x46, 0xbe, 0xab,
	0x0b, 0x8b, 0xdb, 0x21, 0xb5, 0xf1, 0x69, 0x05, 0x8a, 0x67, 0x7c, 0xea, 0x58, 0x13, 0xd6, 0x77,
	0x54, 0xdd, 0x23, 0x05, 0xc8, 0x9a, 0xae, 0x63, 0xd0, 0xd4, 0x5e, 0x6a, 0x7f, 0x8d, 0x6c, 0x42,
	0x41, 0xad, 0x34, 0x53, 0x17, 0xec, 0x9d, 0x1e, 0xd0, 0x34, 0x56, 0xb7, 0x61, 0xc3, 0xe6, 0xda,
	0x88, 0x8d, 0x75, 0x7f, 0x22, 0x34, 0xcb, 0x36, 0x26, 0xfe, 0x88, 0x79, 0x34, 0x83, 0x60, 0x15,
	0x4a, 0xec, 0x11, 0x2b, 0x9a, 0xa3, 0x0b, 0xc1, 0x5c, 0x9b, 0x66, 0xf7, 0x32, 0xfb, 0x39, 0xb2,
	0x01, 0x79, 0x97, 0x4d, 0x34, 0x83, 0xdb, 0x82, 0x3d, 0x0a, 0xba, 0x2c, 0xd9, 0x39, 0x92, 0x87,
	0x8c, 0xe1, 0x38, 0x74, 0x13, 0xb7, 0x4a, 0x86, 0x5c, 0x68, 0x8a, 0xc5, 0x7d, 0x41, 0xb7, 0x90,
	0x51, 0x84, 0x15, 0xc3, 0x7b, 0xd0, 0x5d, 0x87, 0xee, 0x20, 0xa9, 0x02, 0xc5, 0x70, 0x3d, 0xe7,
	0xed, 0x22, 0x0f, 0x20, 0x6d, 0x72, 0xba, 0x8f, 0x9c, 0x23, 0x28, 0x9a, 0x5c, 0x73, 0x26, 0xbe,
	0x69, 0xd9, 0x9a, 0x08, 0x1c, 0x46, 0x7f, 0x91, 0xf5, 0x62, 0xbb, 0xda, 0xfa, 0x12, 0x56, 0x97,
	0x0f, 0x10, 0xbf, 0x93, 0x30, 0x91, 0xbb, 0xe5, 0x86, 0x48, 0xb0, 0x89, 0x82, 0x15, 0x14, 0xb1,
	0xa6, 0x0e, 0x77, 0x85, 0xb2, 0xf2, 0x40, 0x0f, 0xb0, 0xbe, 0x0b, 0x55, 0x59, 0x5f, 0x08, 0x60,
	0xca, 0x47, 0xd6, 0xd8, 0x62, 0xae, 0x47, 0x0f, 0xf1, 0xf4, 0x7f, 0x65, 0x68, 0x7c, 0xa1, 0xfa,
	0xab, 0xb4, 0x9f, 0x6f, 0x37, 0x17, 0xce, 0x8e, 0x67, 0x2e, 0xaf, 0xf2, 0x22, 0x22, 0x77, 0x6c,
	0xe1, 0x06, 0xd8, 0x04, 0x2e, 0xdd, 0xb4, 0x51, 0xef, 0x18, 0xca, 0x6a, 0x15, 0xf3, 0x73, 0x8c,
	0x7e, 0x6a, 0x31, 0x3f, 0xe6, 0xa2, 0x23, 0xd5, 0x39, 0xbe, 0xe0, 0xe9, 0x04, 0xef, 0x4e, 0x67,
	0x52, 0x8b, 0xae, 0x7e, 0x43, 0xe4, 0x27, 0xa8, 0x21, 0x92, 0xe8, 0xeb, 0x77, 0xbc, 0xc7, 0xb9,
	0x0a, 0x24, 0xe6, 0xec, 0x0f, 0x74, 0x76, 0xf8, 0x2d, 0x67, 0x66, 0x82, 0x37, 0x3e, 0x7c, 0x65,
	0xd0, 0xbf, 0xa3, 0x01, 0x53, 0xab, 0xf9, 0x35, 0xff, 0x89, 0x7a, 0xee, 0x04, 0xe2, 0x81, 0xdb,
	0xf4, 0x22, 0xea, 0x79, 0xb8, 0x9e, 0xf3, 0xba, 0xc8, 0x93, 0x5a, 0xae, 0x3f, 0x0c, 0xe8, 0x20,
	0xd2, 0x52, 0xab, 0x39, 0xe7, 0x5a, 0x71, 0xea, 0x6d, 0x28, 0x3f, 0xcb, 0x57, 0x4e, 0xdd, 0x6b,
	0x16, 0xe0, 0x8c, 0xe7, 0xc8, 0x0f, 0xb0, 0xfc, 0x56, 0x9f, 0xf8, 0x0c, 0x87, 0x3b, 0xf7, 0x57,
	0xfa, 0xcf, 0x54, 0xfd, 0x04, 0x48, 0xc2, 0xcd, 0xbf, 0xb3, 0xab, 0x51, 0x81, 0x55, 0x69, 0x7f,
	0xaa, 0xdb, 0x23, 0x45, 0xd5, 0x5d, 0x53, 0x52, 0xe5, 0xe0, 0x37, 0x3e, 0xa4, 0x20, 0x3f, 0xcb,
	0xa5, 0x67, 0x8f, 0x39, 0xf9, 0x19, 0x56, 0x8d, 0x90, 0x87, 0x84, 0x7c, 0x9b, 0xc4, 0x03, 0x44,
	0x05, 0xd9, 0x29, 0xcb, 0x76, 0x7c, 0xa1, 0x79, 0xd6, 0x7b, 0xa6, 0x0d, 0x03, 0x21, 0x1f, 0x98,
	0x3a, 0x2a, 0x4b, 0x6a, 0xb0, 0x2e, 0xdd, 0x3d, 0x81, 0x32, 0x08, 0x1d, 0xc0, 0x5a, 0xf4, 0xc2,
	0xe5, 0xa3, 0x4b, 0x49, 0xe9, 0x5a, 0x2b, 0xfc, 0x05, 0xb4, 0xa2, 0x5f, 0x40, 0xeb, 0x7c, 0x46,
	0x68, 0x5c, 0xcf, 0xdf, 0xfe, 0x0d, 0x7b, 0xe3, 0x33, 0x4f, 0xa8, 0x5b, 0x0b, 0xdd, 0x45, 0x83,
	0x05, 0xd2, 0x86, 0x92, 0x11, 0xc2, 0x1a, 0x0f, 0xbb, 0x89, 0xe7, 0xe7, 0x63, 0x43, 0x17, 0x6f,
	0x77, 0xe3, 0x12, 0x4a, 0x73, 0x49, 0xcf, 0x91, 0x15, 0x16, 0xd7, 0x3c, 0x84, 0x42, 0xa4, 0x69,
	0xc9, 0x24, 0x66, 0x82, 0x95, 0xe7, 0x82, 0x2a, 0xa7, 0xe6, 0x3d, 0x14, 0x62, 0x8f, 0xb4, 0x0a,
	0x1b, 0xdd, 0xbe, 0x36, 0xb8, 0x7c, 0xd9, 0xed, 0x5d, 0x69, 0x77, 0xf7, 0x83, 0x8e, 0x76, 0xd5,
	0xbf, 0xea, 0x94, 0x97, 0xc8, 0x16, 0xac, 0x3f, 0x01, 0xba, 0xfd, 0x72, 0x4a, 0x06, 0xb5, 0xf5,
	0xac, 0x7c, 0x71, 0x7a, 0x7b, 0x57, 0x4e, 0x37, 0x3f, 0xa6, 0xa0, 0xf8, 0xe4, 0xc1, 0x20, 0x3b,
	0x59, 0x3f, 0x09, 0x52, 0x05, 0x79, 0xc6, 0x8f, 0x50, 0x4b, 0x84, 0xc2, 0x73, 0xe4, 0xbf, 0x62,
	0xfb, 0xab, 0x70, 0xe7, 0xa6, 0x9c, 0x21, 0x3b, 0x50, 0x4f, 0x24, 0xdc, 0x5e, 0xf6, 0xce, 0xfe,
	0x2f, 0x67, 0xdb, 0x3d, 0xc8, 0x9c, 0x0e, 0x7a, 0xe4, 0x3f, 0x1c, 0x2d, 0x95, 0x0c, 0x49, 0x88,
	0x7f, 0xd6, 0xbf, 0x7a, 0x3d, 0x09, 0x0a, 0xfb, 0xd0, 0x58, 0x1a, 0xae, 0x20, 0x78, 0xfc, 0x39,
	0x00, 0x00, 0xff, 0xff, 0x89, 0x73, 0x04, 0x49, 0x31, 0x06, 0x00, 0x00,
}
